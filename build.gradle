plugins {
	id 'eclipse'
	id 'idea'
	id 'maven-publish'
	id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
	mappings channel: mappings_channel, version: mappings_version

	// default run configurations.
	// these can be tweaked, removed, or duplicated as needed.
	runs {
		client {
			workingDirectory project.file('run')
			mods {
				appleskin {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file('run')
			mods {
				appleskin {
					source sourceSets.main
				}
			}
		}
	}
}

group = project.maven_group
archivesBaseName = project.archives_base_name
version = "mc" + project.minecraft_version + "-" + project.mod_version
def semver_version = project.mod_version + "+mc" + project.minecraft_version

sourceSets.main.java.srcDirs += 'java'
sourceSets.main.java.srcDirs += 'apis'
sourceSets.main.resources.srcDirs += 'resources'

dependencies {
	minecraft 'net.minecraftforge:forge:'+minecraft_version+'-'+forge_version
}

jar {
	manifest {
		attributes([
			"Specification-Title": "appleskin",
			"Specification-Vendor": "squeek",
			"Specification-Version": "1",
			"Implementation-Title": project.name,
			"Implementation-Version": semver_version,
			"Implementation-Vendor" :"squeek",
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}

	finalizedBy 'reobfJar'
}

task sourcesJar(type: Jar) {
	archiveClassifier.set("sources")
	from sourceSets.main.allJava
}

task apiJar(type: Jar) {
	archiveClassifier.set("api")
	from sourceSets.main.output
	include "squeek/appleskin/api/**"

	finalizedBy 'reobfJar'
}

artifacts {
	archives sourcesJar
	archives apiJar
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			groupId = group
			artifactId = archivesBaseName

			// add all the jars that should be included when publishing to maven
			artifact(jar)
			artifact(sourcesJar)
			artifact(apiJar)
		}
	}

	repositories {
		maven {
			url = project.findProperty("maven.url") ?: System.getenv("MAVEN_URL")
			credentials {
				username=project.findProperty("maven.user") ?: System.getenv("MAVEN_USER")
				password=project.findProperty("maven.password") ?: System.getenv("MAVEN_PASSWORD")
			}
		}
	}
}
